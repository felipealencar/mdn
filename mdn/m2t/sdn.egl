[%
import "header.egl";
import "utils.egl";
import "condition.egl";
import "firewall.egl"; 
import "monitor.egl"; 
%]

[% var header = getCodeHeader(); %]
[%=header%]
[% 
var ruleCounter : Integer = 0;
var counterActionDrop : Integer = 0;
var counterActionModify : Integer = 0;
var counterActionForward : Integer = 0;
var counterActionMonitor : Integer = 0;
%]
def mdn_handler (event):
  # Handles packet events and kills the ones with blocked property
  packet = event.parsed
				
[%
for (rule in Rule.all) {
	if (rule.ruleAction.isDefined()) {
		if (rule.ruleAction.type.value = Actions#DROP.value and rule.sourceHostRule.isDefined() and rule.targetHostRule.isDefined()) {
			
			if(counterActionDrop == 0) {
				
				counterActionDrop = counterActionDrop + 1;
			}		
  actionDrop(rule);
			
	
		}
		//SE A AÇÃO FOR MONITOR
		if (rule.ruleAction.type.value = Actions#MONITOR.value and rule.sourceHostRule.isDefined() and rule.targetHostRule.isDefined()) {

  monitorAction(rule);	
			
			if(counterActionMonitor == 0) {
				counterActionMonitor = counterActionMonitor + 1;
			}	
		}
	}
}
%]
[%

%]
def launch ():
[%
if(counterActionDrop > 0) {
%]
  core.openflow.addListenerByName("PacketIn", mdn_handler)
				
[%
}
if(counterActionMonitor > 0) {
%]		
  from pox.lib.recoco import Timer

  # attach handsers to listners
  core.openflow.addListenerByName("FlowStatsReceived", _handle_flowstats_received) 
  core.openflow.addListenerByName("PortStatsReceived", _handle_portstats_received) 

  # timer set to execute every five seconds
  Timer(5, _timer_func, recurring=True)	
[%
}
%]


[%
operation isEmpty (object) {
   if(object.size > 0){
      return false;
   }
   return true;
}
%]

[%
operation verifySubFolders (object) {
   if(not isEmpty(object)){
      %]cd [%=object.name%]
      [%
      } 
   }
%]