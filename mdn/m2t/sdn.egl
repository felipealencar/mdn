import pox
import pprint
from pox.lib.packet.ethernet import ethernet, ETHER_BROADCAST
from pox.lib.packet.ipv4 import ipv4
from pox.lib.packet.arp import arp
from pox.lib.addresses import IPAddr, EthAddr
from pox.lib.util import str_to_bool, dpidToStr
from pox.lib.recoco import Timer

from pox.core import core

log = core.getLogger()
[%
for (policy in Policy.all) {
	if (policy.select(p|p.policyAction.isDefined()).size() > 0) {
		if (policy.policyAction.type.value = Actions#DROP.value and policy.sourceHostPolicy.isDefined() and policy.targetHostPolicy.isDefined()) {
%]


block_ips = set()

def block_handler (event):
  
  # Handles packet events and kills the ones with blocked property
  packet = event.parsed
  ip = packet.find('ipv4')

  if ip is None:
    # This packet isn't IP!
    return
  elif str(ip.srcip) == '10.0.0.1':
    # The IP is in the block list
    print("nao pode source %s - destination %s", ip.srcip, ip.dstip)  
    event.halt = True
  else:
    print("pode source %s - destination %s", ip.srcip, ip.dstip)

def launch ():
    core.openflow.addListenerByName("PacketIn", block_handler)

[%
operation isEmpty (object) {
   if(object.size > 0){
      return false;
   }
   return true;
}
%]

[%
operation verifySubFolders (object) {
   if(not isEmpty(object)){
      %]cd [%=object.name%]
      [%
      } 
   }
%]